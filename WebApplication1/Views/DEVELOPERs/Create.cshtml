@model WebApplication1.Models.DEVELOPER

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<!DOCTYPE html>
<html lang="zxx">

<head>
    <title>Invent Signup Form Responsive Widget Template | Home :: W3layouts</title>
    <!-- Meta tag Keywords -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta charset="UTF-8" />
    <meta name="keywords"
          content="Invent Signup Form Responsive web template, Bootstrap Web Templates, Flat Web Templates, Android Compatible web template, Smartphone Compatible web template, free webdesigns for Nokia, Samsung, LG, SonyEricsson, Motorola web design" />
    <script>
        addEventListener("load", function () {
            setTimeout(hideURLbar, 0);
        }, false);

        function hideURLbar() {
            window.scrollTo(0, 1);
        }
    </script>
    <!-- //Meta tag Keywords -->
    <!--/Style-CSS -->
    <link rel="stylesheet" href="css/style-signup.css" type="text/css" media="all" />
    <!--//Style-CSS -->
</head>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>DEVELOPER</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @*<div class="form-group">
            @Html.LabelFor(model => model.DeveloperId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeveloperId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeveloperId, "", new { @class = "text-danger" })
            </div>
        </div> *@
<div class="col-lg-6" style="float:none;margin:auto;">


    <div class="col-md-5">
        <div class="form-group">
            @Html.LabelFor(model => model.DeveloperName, htmlAttributes: new { @class = "control-label col-md-2" })
           
                @Html.EditorFor(model => model.DeveloperName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeveloperName, "", new { @class = "text-danger" })
            
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeveloperEmail, htmlAttributes: new { @class = "control-label col-md-2" })
           
                @Html.EditorFor(model => model.DeveloperEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeveloperEmail, "", new { @class = "text-danger" })
          
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeveloperPhone, htmlAttributes: new { @class = "control-label col-md-2" })
          
                @Html.EditorFor(model => model.DeveloperPhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeveloperPhone, "", new { @class = "text-danger" })
            
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeveloperPass, htmlAttributes: new { @class = "control-label col-md-2" })
          
                @Html.EditorFor(model => model.DeveloperPass, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeveloperPass, "", new { @class = "text-danger" })
            
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.License, htmlAttributes: new { @class = "control-label col-md-2" })
            
                @Html.EditorFor(model => model.License, new { htmlAttributes = new { @class = "form-control" } })
           
        </div>
    </div>
</div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
